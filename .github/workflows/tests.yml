# Pipeline that runs all test codes and then generates docs using GitHub Pages

name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11"]
    #container:
    #  image: pytorch/pytorch:2.4.0-cuda12.1-cudnn9-runtime # use pytorch + cuda image
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-xdist
        python -m pip install numpy
        python -m pip install torch
        python -m pip install matplotlib
        python -m pip install tqdm
        python -m pip install plyfile
        python -m pip install .
    - name: Test with pytest
      run: |
        pytest
  docs:
    runs-on: ubuntu-latest
    needs: test   # only run if tests succeed
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdoc3
        pip install .
        pip install ipywidgets
        pip install pythreejs
        pip install tripper
        pip install rdflib

        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build documentation
      run: |
        pdoc --html curlew --output-dir ./docs/_build/html --force
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs/_build/html

  deploy:
    needs: docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
